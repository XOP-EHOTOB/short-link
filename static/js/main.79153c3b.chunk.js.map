{"version":3,"sources":["panels/UserUrl.jsx","panels/Home.jsx","panels/GetToken.jsx","App.js","index.js"],"names":["UserUrl","links","setModal","setSnackbar","setPopout","restart","token","newOffset","offset","itemsx","useState","size","style","margin","linksGrid","setLinksGrid","delLink","link","a","bridge","sendPromise","method","request_id","params","v","key","access_token","onClose","before","background","fill","width","height","deleteLink","actionsLayout","actions","title","autoclose","mode","action","short_url","useEffect","items","map","x","qr_code","qr","createQR","qrSize","isShowLogo","isShowBackground","backgroundColor","data","Date","timestamp","date","getDate","getMonth","getFullYear","getHours","getMinutes","push","Math","round","random","className","dangerouslySetInnerHTML","__html","onClick","svg","activeModal","dynamicContentHeight","settlingHeight","id","header","right","url","marginRight","views","marginLeft","send","text","setModalRoot","marginBottom","cursor","disabled","count","length","icon","Home","go","setToken","userLinks","setUserLinks","snackbar","upload","setUpload","blocked","setBlocked","setOffset","newLink","item","document","getElementById","value","private","error_data","error_code","error_reason","app_id","scope","getToken","photos","JSON","parse","stringify","response","pop","console","log","currentTarget","dataset","to","start","padding","fontSize","textAlign","type","placeholder","it","target","href","GetToken","App","activePanel","setActivePanel","fetchedUser","setUser","ScreenSpinner","popout","modal","user","fetchData","query","window","location","search","split","slice","e","View","subscribe","detail","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","ReactDOM","render"],"mappings":"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","file":"static/js/main.79153c3b.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nimport qr from '@vkontakte/vk-qr';\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport { Icon24Dismiss, Icon56MentionOutline } from '@vkontakte/icons';\r\nimport { Icon24Poll, Icon16Done} from '@vkontakte/icons';\r\nimport { Icon16ErrorCircleOutline } from '@vkontakte/icons';\r\n\r\nimport {  Snackbar, Avatar, Spinner, Button,\r\n    ModalRoot, ModalPage, ModalPageHeader, PanelHeaderButton,\r\n    Alert, Placeholder, Footer } from '@vkontakte/vkui';\r\n\r\nimport { Icon20DeleteOutline } from '@vkontakte/icons';\r\n\r\nimport './UserUrl.css'\r\n\r\n/* \r\n<Button size=\"s\" style={{margin: 5}} onClick={() => {\r\n                            bridge.send(\"VKWebAppCopyText\", {text: x.short_url});\r\n                            setSnackbar(\r\n                                <Snackbar\r\n                                  onClose={() => setSnackbar(null)}\r\n                                  before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                                >\r\n                                  Ссылка скопирована\r\n                                </Snackbar>\r\n                            )\r\n                        }}>Копировать</Button>\r\n                        <Button  size=\"s\" mode=\"destructive\" style={{margin: 5}} \r\n                        onClick={() => {\r\n                            deleteLink(x)\r\n                        }}>Удалить</Button>\r\n                        \r\n                    <Button mode=\"tertiary\"><p className=\"links-check-qr\" onClick={() => {\r\n                        setModalRoot(x, qr_code, date)\r\n                    }}>Показать</p></Button>\r\n*/\r\n\r\nconst UserUrl = ({links, setModal, setSnackbar, setPopout, restart, token, newOffset, offset, itemsx}) => {\r\n    const [linksGrid, setLinksGrid] = useState(<Spinner size=\"medium\" style={{ margin: '20px 0' }} />)\r\n\r\n    const delLink = async (link) => {\r\n        try {\r\n            const photos = await bridge.sendPromise('VKWebAppCallAPIMethod', {\r\n            method: 'utils.deleteFromLastShortened',\r\n            request_id: '324nnefj',\r\n    \r\n            params: {\r\n              v: '5.95',\r\n              key: link.key,\r\n              access_token: token.access_token,\r\n            },\r\n            })\r\n\r\n            setSnackbar(\r\n            <Snackbar\r\n                onClose={() => setSnackbar(null)}\r\n                before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n              >\r\n                Ссылка удалена\r\n              </Snackbar>\r\n              )\r\n              restart()\r\n              setModal(null)\r\n        } catch (e) {\r\n            setModal(null)\r\n            setSnackbar(<Snackbar\r\n                onClose={() => setSnackbar(null)}\r\n                before={<Avatar size={24} style={{ background: 'var(--destructive)' }}>\r\n                    <Icon16ErrorCircleOutline fill=\"#fff\" width={14} height={14} />\r\n                    </Avatar>}\r\n              >\r\n                  Ошибка! Попробуйте позже!\r\n              </Snackbar>)\r\n        }\r\n    }\r\n\r\n    const deleteLink = async (link) => {\r\n        setPopout(<Alert\r\n        actionsLayout=\"horizontal\"\r\n        actions={[\r\n          {\r\n            title: 'Отмена',\r\n            autoclose: true,\r\n            mode: 'cancel',\r\n          },\r\n          {\r\n            title: 'Удалить',\r\n            autoclose: true,\r\n            mode: 'destructive',\r\n            action: () => {\r\n                delLink(link);\r\n            },\r\n          },\r\n        ]}\r\n        onClose={() => setPopout(null)}\r\n      >\r\n        <p>Вы уверены, что хотите удалить ссылку {link.short_url}?</p>\r\n      </Alert>)\r\n    }\r\n\r\n    const setModalRoot = (link, svg, date) => {\r\n        setModal(\r\n    <ModalRoot activeModal='select'>\r\n        <ModalPage \r\n            dynamicContentHeight\r\n            settlingHeight={100}\r\n            onClose={() => {\r\n                setModal(null)\r\n            }}\r\n            id='select' \r\n            header={\r\n            <ModalPageHeader\r\n            right={\r\n                <PanelHeaderButton onClick={() => {\r\n                    setModal(null)\r\n                }}><Icon24Dismiss/>\r\n                </PanelHeaderButton>}\r\n        >Подробная информация\r\n        </ModalPageHeader>\r\n    }>\r\n        <div className='links-qr-code-max'  dangerouslySetInnerHTML={{\r\n            __html: svg\r\n        }}></div>\r\n        <div className='links-qr-code-statistic-all' >\r\n            Короткая ссылка: {link.short_url}</div>\r\n        <div className='links-qr-code-statistic-all-link'>\r\n            Ваша ссылка: {link.url}</div>\r\n        <div className='links-qr-code-statistic-all-date'>Дата создания: {date}</div>\r\n        <div className='links-qr-code-statistic'>\r\n            <Icon24Poll width={14} height={14} style={{marginRight: 5}}/>\r\n            Переходы: {link.views}</div>\r\n            \r\n            <div className=\"next-button\" key={323232324}>\r\n            <Button size=\"s\" style={{margin: 5, marginLeft: 10}} onClick={() => {\r\n                bridge.send(\"VKWebAppCopyText\", {text: link.short_url});\r\n                setSnackbar(\r\n                    <Snackbar\r\n                      onClose={() => setSnackbar(null)}\r\n                      before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                    >\r\n                      Ссылка скопирована\r\n                    </Snackbar>\r\n                )\r\n                setModal(null)\r\n            }}>Копировать</Button>\r\n            <Button  size=\"s\" mode=\"destructive\" style={{margin: 5}} \r\n            onClick={() => {\r\n                deleteLink(link)\r\n            }}>Удалить</Button>\r\n            </div>\r\n            <div/>\r\n        </ModalPage>\r\n      </ModalRoot>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        let items = []\r\n        links.items.map(x => {\r\n            const qr_code = qr.createQR(x.short_url, {\r\n                qrSize: 256,\r\n                isShowLogo: true,\r\n                isShowBackground: true,\r\n                backgroundColor: '#ffffff'\r\n            });\r\n            let data = new Date(x.timestamp * 1000)\r\n            let date = `${data.getDate() < 10 ?\r\n                '0' + data.getDate() :\r\n                 data.getDate()}.${data.getMonth() < 10 ?\r\n                    \"0\" + (data.getMonth()) : \r\n                    data.getMonth() + 1 }.${data.getFullYear()} ${data.getHours() < 10 ?\r\n                        \"0\" + data.getHours() :\r\n                         data.getHours()}:${data.getMinutes() < 10 ?\r\n                            \"0\" + data.getMinutes() :\r\n                             data.getMinutes()}`\r\n            items.push(\r\n                <div key={Math.round(Math.random() * 1000000)} className='links-grid-items'>\r\n                    <div className='links-qr-code' dangerouslySetInnerHTML={{\r\n                        __html: qr_code\r\n                    }}\r\n                    onClick={() => {\r\n                        setModalRoot(x, qr_code, date)\r\n                    }}\r\n                    ></div>\r\n                    <div className='links-body' >\r\n                        <div className='links-short-url' onClick={() => {\r\n                            bridge.send(\"VKWebAppCopyText\", {text: x.short_url});\r\n                            setSnackbar(\r\n                                <Snackbar\r\n                                  onClose={() => setSnackbar(null)}\r\n                                  before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                                >\r\n                                  Сокращенная ссылка скопирована\r\n                                </Snackbar>\r\n                            )\r\n                        }}>{x.short_url}</div>\r\n                        <div className='links-url' onClick={() => {\r\n                            bridge.send(\"VKWebAppCopyText\", {text: x.url});\r\n                            setSnackbar(\r\n                                <Snackbar\r\n                                  onClose={() => setSnackbar(null)}\r\n                                  before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                                >\r\n                                  Ссылка скопирована\r\n                                </Snackbar>\r\n                            )\r\n                        }}>{x.url}</div>\r\n                        <div className='links-date'>{date}</div>\r\n                    </div>\r\n                    <div className='links-body-infp'>\r\n                        <Icon20DeleteOutline \r\n                        className='links-body-infpx'\r\n                        width={20} \r\n                        height={20} \r\n                        style={{marginBottom: 15, marginLeft: 10, cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                            deleteLink(x)\r\n                        }}/>\r\n                        <div className=\"links-body-vues\">\r\n                            <Icon24Poll \r\n                            width={10} \r\n                            height={10}\r\n                            style={{marginLeft: 10}}\r\n                            /> {x.views}\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        items.push(\r\n        <div key={33332324}>\r\n            <div className=\"next-button\" key={323232324}>\r\n                <Button style={{margin: 5}} key={323256424} onClick={() => {\r\n                    if (newOffset(-1)) {\r\n                        setLinksGrid(<Spinner size=\"medium\" style={{ margin: '20px 0' }} />)\r\n                    }\r\n                }} disabled={offset === 0 ? true : false}>Назад</Button> \r\n                <Button style={{margin: 5}}  key={323232334} onClick={() => {\r\n                     if (links.count < 10) return;\r\n                     setLinksGrid(<Spinner size=\"medium\" style={{ margin: '20px 0' }} />)\r\n                    newOffset(1)\r\n                }} disabled={itemsx === 11 ? false : true}>Далее</Button> </div>\r\n            <Footer key={323232424} className='footer' ><p className='checkbox-p'>Нажмите на QR-код, для того чтобы открыть подробную информацию.<br/>Нажмите на ссылку, для того чтобы скопировать.</p></Footer>\r\n        </div>\r\n       )\r\n        if (links.items.length < 1) {\r\n            items = (<Placeholder\r\n            icon={<Icon56MentionOutline />}\r\n          >\r\nЗдесь будет информация о ваших сокращенных ссылках.\r\n          </Placeholder>)\r\n        }\r\n        setLinksGrid(items)\r\n    }, [links])\r\n\r\n    return linksGrid\r\n}\r\n\r\nexport default UserUrl","import React, {useState, useEffect} from 'react'\r\nimport { PanelHeader, Panel, Card, Input, Checkbox, Button, Group, Header, Spinner,\r\n  Snackbar, Avatar, Footer, Link} from '@vkontakte/vkui'\r\nimport {Icon16ErrorCircleOutline, Icon16Done} from '@vkontakte/icons'\r\n\r\nimport UserUrl from './UserUrl'\r\nimport bridge from '@vkontakte/vk-bridge'\r\n\r\nimport './Home.css'\r\n\r\n//<Footer className='footer'>Может быть показана реклама</Footer>\r\n\r\nconst Home = ({id, token, setModal, setPopout, go, setToken}) => {\r\n    const [userLinks, setUserLinks] = useState(<Spinner size=\"medium\" style={{ margin: '20px 0' }} />)\r\n    const [snackbar, setSnackbar] = useState(null)\r\n    const [upload, setUpload] = useState(false)\r\n    const [blocked, setBlocked] = useState(0)\r\n    const [offset, setOffset] = useState(0)\r\n\r\n    const restart = () => {\r\n      setUpload(!upload)\r\n    }\r\n\r\n    const newOffset = (x) => {\r\n      if (x === 1) {\r\n        setOffset(offset + 10)\r\n      } else {\r\n        if (offset < 10) return;\r\n        setOffset(offset - 10)\r\n      }\r\n      restart()\r\n      return true\r\n    }\r\n\r\n    const showBanner = () => {\r\n      let x = Math.round(Math.random() * 3)\r\n      if (x = 2) {\r\n        bridge.sendPromise('VKWebAppShowNativeAds', { ad_format: 'interstitial' })\r\n      }\r\n    }\r\n\r\n    const newLink = async () => {\r\n      let item = document.getElementById('home-input')\r\n      if (item.value.length < 1) return setSnackbar(\r\n        <Snackbar\r\n            onClose={() => setSnackbar(null)}\r\n            before={<Avatar size={24} style={{ background: 'var(--destructive)' }}>\r\n            <Icon16ErrorCircleOutline fill=\"#fff\" width={14} height={14} />\r\n            </Avatar>}\r\n          >\r\n            Введите ссылку!\r\n          </Snackbar>\r\n          )\r\n      try {\r\n      \r\n       const photos = await bridge.sendPromise('VKWebAppCallAPIMethod', {\r\n            method: 'utils.getShortLink',\r\n            request_id: '324nnefj',\r\n    \r\n            params: {\r\n              v: '5.95',\r\n              url: item.value,\r\n              private: blocked,\r\n              access_token: token.access_token,\r\n            },\r\n        })\r\n        \r\n        setSnackbar(\r\n          <Snackbar\r\n              onClose={() => setSnackbar(null)}\r\n              before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n              Ссылка сохранена!\r\n            </Snackbar>\r\n            )\r\n      restart()\r\n      document.getElementById('home-input').value = ''\r\n      //showBanner()\r\n      } catch (e) {\r\n        let text = 'Ошибка! Попробуйте позже!'\r\n        if (e.error_data.error_code === 100) {\r\n          text = 'Ошибка! Недопустимый URL'\r\n        }\r\n        if (e.error_data.error_reason) {\r\n          if (e.error_data.error_reason.error_code === 100) {\r\n            text = 'Ошибка! Недопустимый URL'\r\n          }\r\n        }\r\n        setSnackbar(<Snackbar\r\n          onClose={() => setSnackbar(null)}\r\n          before={<Avatar size={24} style={{ background: 'var(--destructive)' }}>\r\n              <Icon16ErrorCircleOutline fill=\"#fff\" width={14} height={14} />\r\n              </Avatar>}\r\n        >\r\n            {text}\r\n        </Snackbar>)\r\n      }\r\n  }\r\n\r\n    useEffect(() => {\r\n\r\n      const getToken = async () => {\r\n        const access_token = await bridge.send('VKWebAppGetAuthToken', {\r\n          app_id: 7790406,\r\n          scope: '',\r\n      })\r\n        setToken(access_token)\r\n      }\r\n      getToken()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      if (token.access_token === 0) return\r\n      /*document.querySelector('#home-input').addEventListener('keydown', function(e) {\r\n        if (e.keyCode === 13) {\r\n          newLink()\r\n        }\r\n      });*/\r\n        const start = async () => {\r\n    \r\n            try {\r\n              const photos = await bridge.sendPromise('VKWebAppCallAPIMethod', {\r\n                method: 'utils.getLastShortenedLinks',\r\n                request_id: '324nnefj',\r\n        \r\n                params: {\r\n                  v: '5.95',\r\n                  count: 11,\r\n                  offset,\r\n                  access_token: token.access_token,\r\n                },\r\n                })\r\n                \r\n                let items = JSON.parse(JSON.stringify(photos.response.items.length))\r\n                if (items === 11) {\r\n                  photos.response.items.pop()\r\n                }\r\n                \r\n                if (items === 0 && offset > 0) {\r\n                  newOffset(-1)\r\n                  setUserLinks(<Spinner size=\"medium\" style={{ margin: '20px 0' }} />)\r\n                  return\r\n                }\r\n\r\n                setUserLinks(<UserUrl \r\n                  itemsx={items}\r\n                  links={photos.response} \r\n                  setModal={setModal} \r\n                  setSnackbar={setSnackbar}\r\n                  setPopout={setPopout}\r\n                  restart={restart}\r\n                  token={token}\r\n                  newOffset={newOffset}\r\n                  offset={offset}\r\n                  />)\r\n            } catch (e) {\r\n              console.log(e);\r\n              go({currentTarget: {dataset: {to: 'new-user'}}})\r\n            }\r\n            \r\n        }\r\n          start()\r\n    }, [upload, token])\r\n\r\n    return (\r\n    <Panel id={id}>\r\n        <PanelHeader>Сокращение cсылок</PanelHeader>\r\n        <Card mode=\"shadow\" style={{margin: 5, padding: 5, fontSize: 14, textAlign: 'center'}}>\r\n            <div >\r\nНа этой странице вы можете сделать из длинной и сложной ссылки простую.\r\nТакие ссылки удобнее использовать в ваших записях и сообщениях.\r\n            </div>\r\n        </Card >\r\n        <Input style={{margin: 5}} type=\"text\" placeholder=\"Ссылка, которую вы хотите сократить\" id='home-input'/>\r\n        <Checkbox id='home-checkbox' onClick={() => {\r\n          let it = 1\r\n          if (blocked === 1) {\r\n            it = 0\r\n          }\r\n          setBlocked(it)\r\n        }}><p className='checkbox-p'>Статистика ссылки видна только вам</p></Checkbox>\r\n        <Button size=\"m\" style={{margin: 5}} onClick={newLink}>Сократить</Button>\r\n        \r\n        <Group>\r\n        <Header mode=\"secondary\"><p className='checkbox-p'>Недавно сокращённые ссылки</p></Header>\r\n        {userLinks}\r\n        </Group>\r\n        {snackbar}\r\n        <Footer>Made by <Link target=\"_blank\" href=\"https://хор-енотов.рф\">ХОР ЕНОТОВ</Link></Footer>\r\n    </Panel>\r\n    )\r\n}\r\n\r\nexport default Home","import React, {useState} from 'react'\r\n\r\nimport { Panel, PanelHeader, Placeholder, Button, Separator, Group, Snackbar, Avatar } from '@vkontakte/vkui'\r\nimport { Icon56UsersOutline, Icon48Linked, Icon16ErrorCircleOutline } from '@vkontakte/icons'\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nconst GetToken = ({id, setToken, go}) => {\r\n    const [snackbar, setSnackbar] = useState(null)\r\n\r\n    const getToken = async () => {\r\n\t\ttry {\r\n\t\tconst access_token = await bridge.send('VKWebAppGetAuthToken', {\r\n\t\t\t\tapp_id: 7790406,\r\n\t\t\t\tscope: '',\r\n\t\t})\r\n\t\t\tsetToken(access_token)\r\n      go({currentTarget: {dataset: {to: 'home'}}})\r\n\t\t} catch (e) {\r\n\t\t\tsetSnackbar(<Snackbar\r\n                onClose={() => setSnackbar(null)}\r\n                before={<Avatar size={24} style={{ background: 'var(--destructive)' }}>\r\n                    <Icon16ErrorCircleOutline fill=\"#fff\" width={14} height={14} />\r\n                    </Avatar>}\r\n              >\r\n                Ошибка! Необходимо выдать доступ к общей информации профиля, для того, чтобы получить данные о ваших ссылках!\r\n              </Snackbar>)\r\n\t\t}\r\n\t}\r\n\r\n    return <Panel id={id}>\r\n        <PanelHeader>Сокращение cсылок</PanelHeader>\r\n\r\n        <Group>\r\n                <Placeholder\r\n                  icon={<Icon48Linked />}\r\n                  action={<Button size=\"m\" onClick={getToken}>Продолжить</Button>}\r\n                >\r\nПривет! На этой странице вы можете сделать из длинной и сложной ссылки простую.\r\nТакие ссылки удобнее использовать в ваших записях и сообщениях. <br/><br/>\r\nДля получения информации о сокращенных ссылках необходимо разрешить доступ к вашему аккаунту!\r\n\r\n\r\n                </Placeholder>\r\n              </Group>\r\n              {snackbar}\r\n    </Panel>\r\n}\r\n\r\nexport default GetToken ","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot, Panel, Card } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home'\nimport GetToken from './panels/GetToken'\n\nimport './App.css'\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('new-user');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [modal, setModal] = useState(null)\n\tconst [token, setToken] = useState({access_token: 0})\n\n\tuseEffect(() => {\n\t\t\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t\tlet query = window.location.search.split('&')\n\t\tquery\n\t\tif (+query[3].slice(query[3].length - 1, query[3].length) === 1 ) {\n\t\t\tsetActivePanel('home')\n\t\t} else {\n\t\t\tsetActivePanel('new-user')\n\t\t}\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout} modal={modal}>\n\t\t\t\t<GetToken \n\t\t\t\t\tid='new-user' \n\t\t\t\t\tgo={go}\n\t\t\t\t\tsetToken={setToken}\n\t\t\t\t/>\n\n\t\t\t\t\t<Home \n\t\t\t\t\tid=\"home\" \n\t\t\t\t\tfetchedUser={fetchedUser} \n\t\t\t\t\tsetModal={setModal} \n\t\t\t\t\tsetPopout={setPopout}\n\t\t\t\t\ttoken={token}\n\t\t\t\t\tgo={go}\n\t\t\t\t\tsetToken={setToken}\n\t\t\t\t/>\n\t\t\t\t</View>\t\t\t\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\nbridge.subscribe(({ detail: { type, data }}) => {\n  if (type === 'VKWebAppUpdateConfig') {\n    const schemeAttribute = document.createAttribute('scheme');\n    schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n    document.body.attributes.setNamedItem(schemeAttribute);\n  }\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}