{"version":3,"sources":["panels/UserUrl.jsx","panels/Home.jsx","App.js","index.js"],"names":["UserUrl","links","useState","linksGrid","setLinksGrid","useEffect","console","log","items","map","x","qr_code","qr","createQR","short_url","qrSize","isShowLogo","isShowBackground","data","Date","timestamp","date","getDate","getMonth","getFullYear","getHours","getMinutes","push","key","Math","round","random","className","dangerouslySetInnerHTML","__html","url","style","marginBottom","Home","id","fetchedUser","size","margin","userLinks","setUserLinks","a","bridge","send","app_id","scope","token","sendPromise","method","request_id","params","v","count","offset","access_token","photos","response","start","mode","padding","fontSize","textAlign","type","placeholder","App","activePanel","setUser","ScreenSpinner","popout","setPopout","user","subscribe","detail","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","View","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cec9a677.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nimport qr from '@vkontakte/vk-qr';\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport { Icon20CancelCircleFillRed, Icon20CopyOutline } from '@vkontakte/icons';\r\nimport './UserUrl.css'\r\n\r\nconst UserUrl = ({links}) => {\r\n    const [linksGrid, setLinksGrid] = useState(null)\r\n    useEffect(() => {\r\n        console.log(links);\r\n       \r\n        let items = []\r\n        links.items.map(x => {\r\n            const qr_code = qr.createQR(x.short_url, {\r\n                qrSize: 256,\r\n                isShowLogo: true,\r\n                isShowBackground: false\r\n            });\r\n            let data = new Date(x.timestamp * 1000)\r\n            let date = `${data.getDate() < 10 ?\r\n                '0' + data.getDate() :\r\n                 data.getDate()}.${data.getMonth() < 10 ?\r\n                    \"0\" + (data.getMonth() + 1) : \r\n                    data.getMonth() + 1 }.${data.getFullYear()} ${data.getHours() < 10 ?\r\n                        \"0\" + data.getHours() :\r\n                         data.getHours()}:${data.getMinutes() < 10 ?\r\n                            \"0\" + data.getMinutes() :\r\n                             data.getMinutes()}`\r\n            items.push(\r\n                <div key={Math.round(Math.random() * 1000000)} className='links-grid-items'>\r\n                    <div className='links-qr-code' dangerouslySetInnerHTML={{\r\n                        __html: qr_code\r\n                    }}></div>\r\n                    <div className='links-body'>\r\n                        <div className='links-short-url'>{x.short_url}</div>\r\n                        <div className='links-url'>{x.url}</div>\r\n                        <div className='links-date'>{date}</div>\r\n                    </div>\r\n                    <div>\r\n                        <Icon20CancelCircleFillRed style={{marginBottom: 5}}/>\r\n                        <Icon20CopyOutline/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        setLinksGrid(items)\r\n    }, [links])\r\n\r\n    return linksGrid\r\n}\r\n\r\nexport default UserUrl","import React, {useState, useEffect} from 'react'\r\nimport { PanelHeader, Panel, Card, Input, Checkbox, Button, Group, Header, Spinner} from '@vkontakte/vkui'\r\nimport {Icon20ArticleOutline} from '@vkontakte/icons'\r\n\r\nimport UserUrl from './UserUrl'\r\nimport bridge from '@vkontakte/vk-bridge'\r\n\r\nimport './Home.css'\r\n\r\nconst Home = ({id, fetchedUser}) => {\r\n    const [userLinks, setUserLinks] = useState(<Spinner size=\"medium\" style={{ margin: '20px 0' }} />)\r\n\r\n    useEffect(() => {\r\n        const start = async () => {\r\n            const token = await bridge.send('VKWebAppGetAuthToken', {\r\n                app_id: 7790406,\r\n                scope: '',\r\n              })\r\n        \r\n            const photos = await bridge.sendPromise('VKWebAppCallAPIMethod', {\r\n            method: 'utils.getLastShortenedLinks',\r\n            request_id: '324nnefj',\r\n    \r\n            params: {\r\n              v: '5.95',\r\n              count: 50,\r\n              offset: 0,\r\n              access_token: token.access_token,\r\n            },\r\n            })\r\n            setUserLinks(<UserUrl links={photos.response}/>)\r\n        }\r\n          start()\r\n    }, [])\r\n\r\n    return (\r\n    <Panel id={id}>\r\n        <PanelHeader>Сокращение cсылок</PanelHeader>\r\n        <Card mode=\"shadow\" style={{margin: 5, padding: 5, fontSize: 14, textAlign: 'center'}}>\r\n            <div >\r\nНа этой странице вы можете сделать из длинной и сложной ссылки простую.\r\nТакие ссылки удобнее использовать в ваших записях и сообщениях.\r\n            </div>\r\n        </Card >\r\n        <Input style={{margin: 5}} type=\"text\" placeholder=\"Ссылка, которую вы хотите сократить\" />\r\n        <Checkbox>Статистика ссылки видна только вам</Checkbox>\r\n        <Button size=\"m\" style={{margin: 5}}>Сократить</Button>\r\n        <Group>\r\n        <Header mode=\"secondary\">Недавно сокращённые ссылки</Header>\r\n        {userLinks}\r\n        </Group>\r\n    </Panel>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home'\n\nimport './App.css'\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id=\"home\" fetchedUser={fetchedUser}/>\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}