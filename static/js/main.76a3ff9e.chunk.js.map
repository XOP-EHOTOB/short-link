{"version":3,"sources":["panels/UserUrl.jsx","panels/Home.jsx","panels/GetToken.jsx","App.js","index.js"],"names":["UserUrl","links","setModal","setSnackbar","setPopout","restart","token","useState","size","style","margin","linksGrid","setLinksGrid","delLink","link","a","bridge","sendPromise","method","request_id","params","v","key","access_token","onClose","before","background","fill","width","height","deleteLink","actionsLayout","actions","title","autoclose","mode","action","short_url","useEffect","console","log","items","map","x","qr_code","qr","createQR","qrSize","isShowLogo","isShowBackground","backgroundColor","data","Date","timestamp","date","getDate","getMonth","getFullYear","getHours","getMinutes","push","Math","round","random","className","dangerouslySetInnerHTML","__html","onClick","svg","activeModal","dynamicContentHeight","settlingHeight","id","header","right","send","text","url","marginRight","views","setModalRoot","marginBottom","marginLeft","length","icon","Home","go","userLinks","setUserLinks","snackbar","upload","setUpload","blocked","setBlocked","newLink","item","document","getElementById","value","private","error_data","error_code","error_reason","count","offset","photos","response","currentTarget","dataset","to","start","padding","fontSize","textAlign","type","placeholder","it","GetToken","setToken","getToken","app_id","scope","App","activePanel","setActivePanel","fetchedUser","setUser","ScreenSpinner","popout","modal","user","fetchData","e","View","subscribe","detail","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","ReactDOM","render"],"mappings":"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","file":"static/js/main.76a3ff9e.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nimport qr from '@vkontakte/vk-qr';\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport { Icon24Dismiss, Icon56MentionOutline } from '@vkontakte/icons';\r\nimport { Icon24Poll, Icon16Done} from '@vkontakte/icons';\r\nimport { Icon16ErrorCircleOutline } from '@vkontakte/icons';\r\n\r\nimport {  Snackbar, Avatar, Spinner, Button,\r\n    ModalRoot, ModalPage, ModalPageHeader, PanelHeaderButton,\r\n    Alert, Placeholder, Footer } from '@vkontakte/vkui';\r\n\r\nimport { Icon20DeleteOutline } from '@vkontakte/icons';\r\n\r\nimport './UserUrl.css'\r\n\r\n/* \r\n<Button size=\"s\" style={{margin: 5}} onClick={() => {\r\n                            bridge.send(\"VKWebAppCopyText\", {text: x.short_url});\r\n                            setSnackbar(\r\n                                <Snackbar\r\n                                  onClose={() => setSnackbar(null)}\r\n                                  before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                                >\r\n                                  Ссылка скопирована\r\n                                </Snackbar>\r\n                            )\r\n                        }}>Копировать</Button>\r\n                        <Button  size=\"s\" mode=\"destructive\" style={{margin: 5}} \r\n                        onClick={() => {\r\n                            deleteLink(x)\r\n                        }}>Удалить</Button>\r\n                        \r\n                    <Button mode=\"tertiary\"><p className=\"links-check-qr\" onClick={() => {\r\n                        setModalRoot(x, qr_code, date)\r\n                    }}>Показать</p></Button>\r\n*/\r\n\r\nconst UserUrl = ({links, setModal, setSnackbar, setPopout, restart, token}) => {\r\n    const [linksGrid, setLinksGrid] = useState(<Spinner size=\"medium\" style={{ margin: '20px 0' }} />)\r\n\r\n    const delLink = async (link) => {\r\n        try {\r\n            const photos = await bridge.sendPromise('VKWebAppCallAPIMethod', {\r\n            method: 'utils.deleteFromLastShortened',\r\n            request_id: '324nnefj',\r\n    \r\n            params: {\r\n              v: '5.95',\r\n              key: link.key,\r\n              access_token: token.access_token,\r\n            },\r\n            })\r\n\r\n            setSnackbar(\r\n            <Snackbar\r\n                onClose={() => setSnackbar(null)}\r\n                before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n              >\r\n                Ссылка удалена\r\n              </Snackbar>\r\n              )\r\n              restart()\r\n              setModal(null)\r\n        } catch (e) {\r\n            setSnackbar(<Snackbar\r\n                onClose={() => setSnackbar(null)}\r\n                before={<Avatar size={24} style={{ background: 'var(--destructive)' }}>\r\n                    <Icon16ErrorCircleOutline fill=\"#fff\" width={14} height={14} />\r\n                    </Avatar>}\r\n              >\r\n                  Ошибка! Попробуйте позже!\r\n              </Snackbar>)\r\n        }\r\n    }\r\n\r\n    const deleteLink = async (link) => {\r\n        setPopout(<Alert\r\n        actionsLayout=\"horizontal\"\r\n        actions={[\r\n          {\r\n            title: 'Отмена',\r\n            autoclose: true,\r\n            mode: 'cancel',\r\n          },\r\n          {\r\n            title: 'Удалить',\r\n            autoclose: true,\r\n            mode: 'destructive',\r\n            action: () => {\r\n                delLink(link);\r\n            },\r\n          },\r\n        ]}\r\n        onClose={() => setPopout(null)}\r\n      >\r\n        <p>Вы уверены, что хотите удалить ссылку {link.short_url}?</p>\r\n      </Alert>)\r\n    }\r\n\r\n    const setModalRoot = (link, svg, date) => {\r\n        setModal(\r\n    <ModalRoot activeModal='select'>\r\n        <ModalPage \r\n            dynamicContentHeight\r\n            settlingHeight={100}\r\n            id='select' \r\n            header={\r\n            <ModalPageHeader\r\n            right={\r\n                <PanelHeaderButton onClick={() => {\r\n                    setModal(null)\r\n                }}><Icon24Dismiss/>\r\n                </PanelHeaderButton>}\r\n        >Подробная информация\r\n        </ModalPageHeader>\r\n    }>\r\n        <div className='links-qr-code-max' dangerouslySetInnerHTML={{\r\n            __html: svg\r\n        }}></div>\r\n        <div className='links-qr-code-statistic-all' onClick={() => {\r\n                            bridge.send(\"VKWebAppCopyText\", {text: link.short_url});\r\n                            setSnackbar(\r\n                                <Snackbar\r\n                                  onClose={() => setSnackbar(null)}\r\n                                  before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                                >\r\n                                  Ссылка скопирована\r\n                                </Snackbar>\r\n                            )\r\n                            setModal(null)\r\n                        }}>\r\n            Короткая ссылка: {link.short_url}</div>\r\n        <div className='links-qr-code-statistic-all-link'>\r\n            Ваша ссылка: {link.url}</div>\r\n        <div className='links-qr-code-statistic-all-date'>Дата создания: {date}</div>\r\n        <div className='links-qr-code-statistic'>\r\n            <Icon24Poll width={14} height={14} style={{marginRight: 5}}/>\r\n            Переходы: {link.views}</div>\r\n            <Button size=\"s\" style={{margin: 5}} onClick={() => {\r\n                bridge.send(\"VKWebAppCopyText\", {text: link.short_url});\r\n                setSnackbar(\r\n                    <Snackbar\r\n                      onClose={() => setSnackbar(null)}\r\n                      before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                    >\r\n                      Ссылка скопирована\r\n                    </Snackbar>\r\n                )\r\n                \r\n            }}>Копировать</Button>\r\n            <Button  size=\"s\" mode=\"destructive\" style={{margin: 5}} \r\n            onClick={() => {\r\n                deleteLink(link)\r\n            }}>Удалить</Button>\r\n        </ModalPage>\r\n      </ModalRoot>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(links);\r\n       \r\n        let items = []\r\n        links.items.map(x => {\r\n            const qr_code = qr.createQR(x.short_url, {\r\n                qrSize: 256,\r\n                isShowLogo: true,\r\n                isShowBackground: true,\r\n                backgroundColor: '#ffffff'\r\n            });\r\n            let data = new Date(x.timestamp * 1000)\r\n            let date = `${data.getDate() < 10 ?\r\n                '0' + data.getDate() :\r\n                 data.getDate()}.${data.getMonth() < 10 ?\r\n                    \"0\" + (data.getMonth() + 1) : \r\n                    data.getMonth() + 1 }.${data.getFullYear()} ${data.getHours() < 10 ?\r\n                        \"0\" + data.getHours() :\r\n                         data.getHours()}:${data.getMinutes() < 10 ?\r\n                            \"0\" + data.getMinutes() :\r\n                             data.getMinutes()}`\r\n            items.push(\r\n                <div key={Math.round(Math.random() * 1000000)} className='links-grid-items'>\r\n                    <div className='links-qr-code' dangerouslySetInnerHTML={{\r\n                        __html: qr_code\r\n                    }}\r\n                    onClick={() => {\r\n                        setModalRoot(x, qr_code, date)\r\n                    }}\r\n                    ></div>\r\n                    <div className='links-body'  onClick={() => {\r\n                            bridge.send(\"VKWebAppCopyText\", {text: x.short_url});\r\n                            setSnackbar(\r\n                                <Snackbar\r\n                                  onClose={() => setSnackbar(null)}\r\n                                  before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                                >\r\n                                  Ссылка скопирована\r\n                                </Snackbar>\r\n                            )\r\n                        }}>\r\n                        <div className='links-short-url'>{x.short_url}</div>\r\n                        <div className='links-url'>{x.url}</div>\r\n                        <div className='links-date'>{date}</div>\r\n                    </div>\r\n                    <div className='links-body-infp'>\r\n                        <Icon20DeleteOutline \r\n                        width={15} \r\n                        height={15} \r\n                        style={{marginBottom: 20, marginLeft: 15}}\r\n                        onClick={() => {\r\n                            deleteLink(x)\r\n                        }}/>\r\n                        <div className=\"links-body-vues\">\r\n                            <Icon24Poll \r\n                            width={10} \r\n                            height={10}\r\n                            style={{marginLeft: 10}}\r\n                            /> {x.views}\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        items.push(\r\n        <Footer key={323232424} className='footer'>Нажмите на QR код, для того чтобы открыть подробную информацию.</Footer>,\r\n        <Footer key={323232234} className='footer'>Нажмите на ссылку, для того чтобы скопировать.</Footer>\r\n       )\r\n        if (links.items.length < 1) {\r\n            items = (<Placeholder\r\n            icon={<Icon56MentionOutline />}\r\n          >\r\nЗдесь будет информация о ваших сокращенных ссылках.\r\n          </Placeholder>)\r\n        }\r\n        setLinksGrid(items)\r\n    }, [links])\r\n\r\n    return linksGrid\r\n}\r\n\r\nexport default UserUrl","import React, {useState, useEffect} from 'react'\r\nimport { PanelHeader, Panel, Card, Input, Checkbox, Button, Group, Header, Spinner,\r\n  Snackbar, Avatar, Footer} from '@vkontakte/vkui'\r\nimport {Icon16ErrorCircleOutline, Icon16Done} from '@vkontakte/icons'\r\n\r\nimport UserUrl from './UserUrl'\r\nimport bridge from '@vkontakte/vk-bridge'\r\n\r\nimport './Home.css'\r\n\r\n//<Footer className='footer'>Может быть показана реклама</Footer>\r\n\r\nconst Home = ({id, token, setModal, setPopout, go}) => {\r\n    const [userLinks, setUserLinks] = useState(<Spinner size=\"medium\" style={{ margin: '20px 0' }} />)\r\n    const [snackbar, setSnackbar] = useState(null)\r\n    const [upload, setUpload] = useState(false)\r\n    const [blocked, setBlocked] = useState(0)\r\n\r\n    const restart = () => {\r\n      setUpload(!upload)\r\n    }\r\n\r\n    const showBanner = () => {\r\n      let x = Math.round(Math.random() * 3)\r\n      if (x = 2) {\r\n        bridge.sendPromise('VKWebAppShowNativeAds', { ad_format: 'interstitial' })\r\n      }\r\n    }\r\n\r\n    const newLink = async () => {\r\n      try {\r\n      let item = document.getElementById('home-input')\r\n      console.log(blocked);\r\n       const photos = await bridge.sendPromise('VKWebAppCallAPIMethod', {\r\n            method: 'utils.getShortLink',\r\n            request_id: '324nnefj',\r\n    \r\n            params: {\r\n              v: '5.95',\r\n              url: item.value,\r\n              private: blocked,\r\n              access_token: token.access_token,\r\n            },\r\n        })\r\n        \r\n        setSnackbar(\r\n          <Snackbar\r\n              onClose={() => setSnackbar(null)}\r\n              before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n            >\r\n              Ссылка сохранена!\r\n            </Snackbar>\r\n            )\r\n      restart()\r\n      document.getElementById('home-input').value = ''\r\n      //showBanner()\r\n      } catch (e) {\r\n        console.log(e)\r\n        let text = 'Ошибка! Попробуйте позже!'\r\n        if (e.error_data.error_code === 100) {\r\n          text = 'Ошибка! Недопустимый URL'\r\n        }\r\n        if (e.error_data.error_reason) {\r\n          if (e.error_data.error_reason.error_code === 100) {\r\n            text = 'Ошибка! Недопустимый URL'\r\n          }\r\n        }\r\n        setSnackbar(<Snackbar\r\n          onClose={() => setSnackbar(null)}\r\n          before={<Avatar size={24} style={{ background: 'var(--destructive)' }}>\r\n              <Icon16ErrorCircleOutline fill=\"#fff\" width={14} height={14} />\r\n              </Avatar>}\r\n        >\r\n            {text}\r\n        </Snackbar>)\r\n      }\r\n  }\r\n\r\n    useEffect(() => {\r\n      if (token.access_token === 0) return\r\n        const start = async () => {\r\n            try {\r\n              const photos = await bridge.sendPromise('VKWebAppCallAPIMethod', {\r\n                method: 'utils.getLastShortenedLinks',\r\n                request_id: '324nnefj',\r\n        \r\n                params: {\r\n                  v: '5.95',\r\n                  count: 50,\r\n                  offset: 0,\r\n                  access_token: token.access_token,\r\n                },\r\n                })\r\n                setUserLinks(<UserUrl \r\n                  links={photos.response} \r\n                  setModal={setModal} \r\n                  setSnackbar={setSnackbar}\r\n                  setPopout={setPopout}\r\n                  restart={restart}\r\n                  token={token}\r\n                  />)\r\n            } catch (e) {\r\n              go({currentTarget: {dataset: {to: 'new-user'}}})\r\n            }\r\n            \r\n        }\r\n          start()\r\n    }, [upload, token])\r\n\r\n    return (\r\n    <Panel id={id}>\r\n        <PanelHeader>Сокращение cсылок</PanelHeader>\r\n        <Card mode=\"shadow\" style={{margin: 5, padding: 5, fontSize: 14, textAlign: 'center'}}>\r\n            <div >\r\nНа этой странице вы можете сделать из длинной и сложной ссылки простую.\r\nТакие ссылки удобнее использовать в ваших записях и сообщениях.\r\n            </div>\r\n        </Card >\r\n        <Input style={{margin: 5}} type=\"text\" placeholder=\"Ссылка, которую вы хотите сократить\" id='home-input'/>\r\n        <Checkbox id='home-checkbox' onClick={() => {\r\n          let it = 1\r\n          if (blocked === 1) {\r\n            it = 0\r\n          }\r\n          setBlocked(it)\r\n        }}>Статистика ссылки видна только вам</Checkbox>\r\n        <Button size=\"m\" style={{margin: 5}} onClick={newLink}>Сократить</Button>\r\n        \r\n        <Group>\r\n        <Header mode=\"secondary\">Недавно сокращённые ссылки</Header>\r\n        {userLinks}\r\n        </Group>\r\n        {snackbar}\r\n    </Panel>\r\n    )\r\n}\r\n\r\nexport default Home","import React, {useState} from 'react'\r\n\r\nimport { Panel, PanelHeader, Placeholder, Button, Separator, Group, Snackbar, Avatar } from '@vkontakte/vkui'\r\nimport { Icon56UsersOutline, Icon48Linked, Icon16ErrorCircleOutline } from '@vkontakte/icons'\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nconst GetToken = ({id, setToken, go}) => {\r\n    const [snackbar, setSnackbar] = useState(null)\r\n\r\n    const getToken = async () => {\r\n\t\ttry {\r\n\t\tconst access_token = await bridge.send('VKWebAppGetAuthToken', {\r\n\t\t\t\tapp_id: 7790406,\r\n\t\t\t\tscope: '',\r\n\t\t})\r\n\t\t\tsetToken(access_token)\r\n            go({currentTarget: {dataset: {to: 'home'}}})\r\n\t\t} catch (e) {\r\n\t\t\tsetSnackbar(<Snackbar\r\n                onClose={() => setSnackbar(null)}\r\n                before={<Avatar size={24} style={{ background: 'var(--destructive)' }}>\r\n                    <Icon16ErrorCircleOutline fill=\"#fff\" width={14} height={14} />\r\n                    </Avatar>}\r\n              >\r\n                Ошибка! Необходимо выдать доступ к общей информации профиля, для того чтобы получить данные о ваших ссылках!\r\n              </Snackbar>)\r\n\t\t}\r\n\t}\r\n\r\n    return <Panel id={id}>\r\n        <PanelHeader>Сокращение cсылок</PanelHeader>\r\n\r\n        <Group>\r\n                <Placeholder\r\n                  icon={<Icon48Linked />}\r\n                  action={<Button size=\"m\" onClick={getToken}>Продолжить</Button>}\r\n                >\r\nПривет! На этой странице вы можете сделать из длинной и сложной ссылки простую.\r\nТакие ссылки удобнее использовать в ваших записях и сообщениях. <br/><br/>\r\nПриложению необходимо выдать доступ к общей информации вашего аккаунта \r\nдля того чтобы получить информацию о ваших сокращенных ссылках!\r\n\r\n                </Placeholder>\r\n              </Group>\r\n              {snackbar}\r\n    </Panel>\r\n}\r\n\r\nexport default GetToken ","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot, Panel, Card } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home'\nimport GetToken from './panels/GetToken'\n\nimport './App.css'\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('new-user');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [modal, setModal] = useState(null)\n\tconst [token, setToken] = useState({access_token: 0})\n\n\tuseEffect(() => {\n\t\t\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout} modal={modal}>\n\t\t\t\t\t<Home \n\t\t\t\t\tid=\"home\" \n\t\t\t\t\tfetchedUser={fetchedUser} \n\t\t\t\t\tsetModal={setModal} \n\t\t\t\t\tsetPopout={setPopout}\n\t\t\t\t\ttoken={token}\n\t\t\t\t\tgo={go}/>\n\t\t\t\t\t<GetToken \n\t\t\t\t\tid='new-user' \n\t\t\t\t\tgo={go}\n\t\t\t\t\tsetToken={setToken}/>\n\t\t\t\t</View>\t\t\t\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\nbridge.subscribe(({ detail: { type, data }}) => {\n  if (type === 'VKWebAppUpdateConfig') {\n    const schemeAttribute = document.createAttribute('scheme');\n    schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n    document.body.attributes.setNamedItem(schemeAttribute);\n  }\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}