{"version":3,"sources":["panels/UserUrl.jsx","panels/Home.jsx","App.js","index.js"],"names":["UserUrl","links","setModal","useState","size","style","margin","linksGrid","setLinksGrid","snackbar","setSnackbar","useEffect","console","log","items","map","x","qr_code","qr","createQR","short_url","qrSize","isShowLogo","isShowBackground","backgroundColor","data","Date","timestamp","date","getDate","getMonth","getFullYear","getHours","getMinutes","push","key","Math","round","random","className","dangerouslySetInnerHTML","__html","url","mode","onClick","link","svg","activeModal","dynamicContentHeight","settlingHeight","id","header","right","width","height","marginRight","views","setModalRoot","bridge","send","text","onClose","before","background","fill","Home","fetchedUser","userLinks","setUserLinks","a","app_id","scope","token","sendPromise","method","request_id","params","v","count","offset","access_token","photos","response","start","padding","fontSize","textAlign","type","placeholder","App","activePanel","setUser","ScreenSpinner","popout","setPopout","modal","user","subscribe","detail","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","View","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8ea537ba.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nimport qr from '@vkontakte/vk-qr';\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport { Icon20CancelCircleFillRed, Icon20CopyOutline, Icon24Dismiss } from '@vkontakte/icons';\r\nimport { Icon24LinkCircle, Icon24Poll, Icon16Linked, Icon16Done} from '@vkontakte/icons';\r\n\r\nimport { Button, Snackbar, Avatar, Spinner, \r\n    ModalRoot, ModalPage, ModalPageHeader, PanelHeaderButton } from '@vkontakte/vkui';\r\n\r\nimport './UserUrl.css'\r\n\r\nconst UserUrl = ({links, setModal}) => {\r\n    const [linksGrid, setLinksGrid] = useState(<Spinner size=\"medium\" style={{ margin: '20px 0' }} />)\r\n    const [snackbar, setSnackbar] = useState(null)\r\n\r\n    const setModalRoot = (link, svg, date) => {\r\n        setModal(\r\n    <ModalRoot activeModal='select'>\r\n        <ModalPage \r\n            dynamicContentHeight\r\n            settlingHeight={100}\r\n            id='select' \r\n            header={\r\n            <ModalPageHeader\r\n            right={\r\n                <PanelHeaderButton onClick={() => {\r\n                    setModal(null)\r\n                }}><Icon24Dismiss/>\r\n                </PanelHeaderButton>}\r\n        >Подробная информация\r\n        </ModalPageHeader>\r\n    }>\r\n        <div className='links-qr-code-max' dangerouslySetInnerHTML={{\r\n            __html: svg\r\n        }}></div>\r\n        <div className='links-qr-code-statistic-all'>\r\n            Короткая ссылка: {link.short_url}</div>\r\n        <div className='links-qr-code-statistic-all'>\r\n            Ваша ссылка: {link.url}</div>\r\n        <div className='links-qr-code-statistic-all'>Дата создания: {date}</div>\r\n        <div className='links-qr-code-statistic'>\r\n            <Icon24Poll width={14} height={14} style={{marginRight: 5}}/>\r\n            Просмотры: {link.views}</div>\r\n        </ModalPage>\r\n      </ModalRoot>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(links);\r\n       \r\n        let items = []\r\n        links.items.map(x => {\r\n            const qr_code = qr.createQR(x.short_url, {\r\n                qrSize: 256,\r\n                isShowLogo: true,\r\n                isShowBackground: true,\r\n                backgroundColor: '#ffffff'\r\n            });\r\n            let data = new Date(x.timestamp * 1000)\r\n            let date = `${data.getDate() < 10 ?\r\n                '0' + data.getDate() :\r\n                 data.getDate()}.${data.getMonth() < 10 ?\r\n                    \"0\" + (data.getMonth() + 1) : \r\n                    data.getMonth() + 1 }.${data.getFullYear()} ${data.getHours() < 10 ?\r\n                        \"0\" + data.getHours() :\r\n                         data.getHours()}:${data.getMinutes() < 10 ?\r\n                            \"0\" + data.getMinutes() :\r\n                             data.getMinutes()}`\r\n            items.push(\r\n                <div key={Math.round(Math.random() * 1000000)} className='links-grid-items'>\r\n                    <div className='links-qr-code' dangerouslySetInnerHTML={{\r\n                        __html: qr_code\r\n                    }}></div>\r\n                    <div className='links-body'>\r\n                        <div className='links-short-url'>{x.short_url}</div>\r\n                        <div className='links-url'>{x.url}</div>\r\n                        <div className='links-date'>{date}</div>\r\n                    </div>\r\n                    <Button mode=\"tertiary\"><p className=\"links-check-qr\" onClick={() => {\r\n                        setModalRoot(x, qr_code, date)\r\n                    }}>Показать</p></Button>\r\n                    <div className='links-buttons'>\r\n                        <Button size=\"s\" style={{margin: 5}} onClick={() => {\r\n                            bridge.send(\"VKWebAppCopyText\", {text: x.short_url});\r\n                            setSnackbar(\r\n                                <Snackbar\r\n                                  onClose={() => setSnackbar(null)}\r\n                                  before={<Avatar size={24} style={{ background: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n                                >\r\n                                  Ссылка скопирована\r\n                                </Snackbar>\r\n                            )\r\n                        }}>Копировать</Button>\r\n                        <Button  size=\"s\" mode=\"destructive\" style={{margin: 5}}>Удалить</Button>\r\n                    </div>\r\n                    {snackbar}\r\n                </div>\r\n            )\r\n        })\r\n        setLinksGrid(items)\r\n    }, [links])\r\n\r\n    return linksGrid\r\n}\r\n\r\nexport default UserUrl","import React, {useState, useEffect} from 'react'\r\nimport { PanelHeader, Panel, Card, Input, Checkbox, Button, Group, Header, Spinner} from '@vkontakte/vkui'\r\nimport {Icon20ArticleOutline} from '@vkontakte/icons'\r\n\r\nimport UserUrl from './UserUrl'\r\nimport bridge from '@vkontakte/vk-bridge'\r\n\r\nimport './Home.css'\r\n\r\nconst Home = ({id, fetchedUser, setModal}) => {\r\n    const [userLinks, setUserLinks] = useState(<Spinner size=\"medium\" style={{ margin: '20px 0' }} />)\r\n\r\n    useEffect(() => {\r\n        const start = async () => {\r\n            const token = await bridge.send('VKWebAppGetAuthToken', {\r\n                app_id: 7790406,\r\n                scope: '',\r\n              })\r\n        \r\n            const photos = await bridge.sendPromise('VKWebAppCallAPIMethod', {\r\n            method: 'utils.getLastShortenedLinks',\r\n            request_id: '324nnefj',\r\n    \r\n            params: {\r\n              v: '5.95',\r\n              count: 50,\r\n              offset: 0,\r\n              access_token: token.access_token,\r\n            },\r\n            })\r\n            setUserLinks(<UserUrl links={photos.response} setModal={setModal}/>)\r\n        }\r\n          start()\r\n    }, [])\r\n\r\n    return (\r\n    <Panel id={id}>\r\n        <PanelHeader>Сокращение cсылок</PanelHeader>\r\n        <Card mode=\"shadow\" style={{margin: 5, padding: 5, fontSize: 14, textAlign: 'center'}}>\r\n            <div >\r\nНа этой странице вы можете сделать из длинной и сложной ссылки простую.\r\nТакие ссылки удобнее использовать в ваших записях и сообщениях.\r\n            </div>\r\n        </Card >\r\n        <Input style={{margin: 5}} type=\"text\" placeholder=\"Ссылка, которую вы хотите сократить\" />\r\n        <Checkbox>Статистика ссылки видна только вам</Checkbox>\r\n        <Button size=\"m\" style={{margin: 5}}>Сократить</Button>\r\n        <Group>\r\n        <Header mode=\"secondary\">Недавно сокращённые ссылки</Header>\r\n        {userLinks}\r\n        </Group>\r\n    </Panel>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home'\n\nimport './App.css'\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [modal, setModal] = useState(null)\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout} modal={modal}>\n\t\t\t\t\t<Home id=\"home\" fetchedUser={fetchedUser} setModal={setModal}/>\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}